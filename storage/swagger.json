{
  "swagger": "2.0",
  "info": {
    "description": "This is swagger documentation for store store",
    "version": "0.0.1",
    "title": "Store Backend",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "miqdad.farcha@store.backend.fdc"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "host": "store.backend.fdc",
  "basePath": "/",
  "tags": [
    {
      "name": "store",
      "description": "Access to Store Backend"
    },
    {
      "name": "user",
      "description": "Operations about user",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "role",
      "description": "Operations about role",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "merchant",
      "description": "Operations about merchant",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "product",
      "description": "Operations about products",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "product-category",
      "description": "Operations about products category",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "product-brand",
      "description": "Operations about products brands",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "product-delivery",
      "description": "Operations about products delivery",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "product-assets",
      "description": "Operations about products assets",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "cart",
      "description": "Operations about cart",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "voucher",
      "description": "Operations about voucher",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "order",
      "description": "Operations about transactions",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "reviews",
      "description": "Operations about reviews",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "user-address",
      "description": "Operations about users address",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "push-notifications",
      "description": "Operations about push-notifications",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "email-notifications",
      "description": "Operations about email-notifications",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "notification",
      "description": "Operations about notifications",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "banner",
      "description": "Operations about banner",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "prize-setting",
      "description": "Operations about Prizing Setting",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "spinwheel-setting",
      "description": "Operations about Spinwheel Setting",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "manufacturer",
      "description": "Operations about Manufacturer",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "point-setting",
      "description": "Operations about Point Setting",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "user-prize",
      "description": "Operations about User Prize",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "daily-spin-control",
      "description": "Operations about Daily Spin Control",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "user-spinwheel",
      "description": "Operations about User Spinwheel",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "stats",
      "description": "Operations about Stats",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "faq",
      "description": "Operations about FAQ",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "user-point",
      "description": "Operations about User Point",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "shipping-details",
      "description": "Operations about Shipping Details",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "billing-details",
      "description": "Operations about Billing Details",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "STORE-User",
      "description": "Operations about Bridge User",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/user/register": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Register user to system",
        "description": "",
        "operationId": "registerUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "The user name for register to system",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "The email for register to system",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "The password for register to system",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "The user email for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/user/login/superadmin": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs super admin user into the system",
        "description": "",
        "operationId": "loginSuperAdmin",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "The user email for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/user/forgot-password": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "send verification code to user email",
        "description": "",
        "operationId": "forgotPassword",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "The user email for password verification code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid email address supplied"
          }
        }
      }
    },
    "/user/profile": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Function to get user profile",
        "description": "",
        "operationId": "getUserProfile",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/profile/name": {
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Function to update user name",
        "description": "",
        "operationId": "updateUserName",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "New name of user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/profile/gender": {
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Function to update user gender",
        "description": "",
        "operationId": "updateUserGender",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "gender",
            "in": "formData",
            "description": "New gender of user",
            "required": true,
            "type": "string",
            "enum": ["male", "female"]
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/profile/phone": {
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Function to update user phone number",
        "description": "",
        "operationId": "updateUserPhone",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "formData",
            "description": "New phone of user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/profile/password": {
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Function to update user password",
        "description": "",
        "operationId": "updateUserPassword",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "old_password",
            "in": "formData",
            "description": "User old password",
            "required": true,
            "type": "string"
          },
          {
            "name": "new_password",
            "in": "formData",
            "description": "User new password",
            "required": true,
            "type": "string"
          },
          {
            "name": "new_password_confirmation",
            "in": "formData",
            "description": "User new password confirmation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/profile/avatar": {
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Function to update user avatar",
        "description": "",
        "operationId": "updateUserAvatar",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "avatar",
            "in": "formData",
            "description": "New avatar of user",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/profile/birth-date": {
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Function to update user birth date",
        "description": "",
        "operationId": "updateUserBirthdate",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "birth_date",
            "in": "formData",
            "description": "New birth date of user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },

    "/role/add": {
      "post": {
        "tags": [
          "role"
        ],
        "summary": "Add new row to system",
        "description": "",
        "operationId": "addRole",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "The role name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/role/:roleId/update": {
      "patch": {
        "tags": [
          "role"
        ],
        "summary": "Edit role in the system",
        "description": "",
        "operationId": "editRole",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [

          {
            "name": "roleId",
            "in": "params",
            "description": "The role ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "The role name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/role/list": {
      "get": {
        "tags": [
          "role"
        ],
        "summary": "Function to get role list",
        "description": "",
        "operationId": "getRoles",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },


    "/merchant/register": {
      "post": {
        "tags": [
          "merchant"
        ],
        "summary": "Register merchant to system",
        "description": "",
        "operationId": "registerMerchant",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "The Merchant name for register to system",
            "required": true,
            "type": "string"
          },
          {
            "name": "contact_name",
            "in": "formData",
            "description": "The company contact person for register to system",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "The merchant email for register to system",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "The merchant password for register to system",
            "required": true,
            "type": "string"
          },
          {
            "name": "office_phone_number",
            "in": "formData",
            "description": "The company office number for register to system",
            "required": true,
            "type": "string"
          },
          {
            "name": "office_address",
            "in": "formData",
            "description": "The Merchant address for register to system",
            "required": true,
            "type": "string"
          },
          {
            "name": "acra_number",
            "in": "formData",
            "description": "The Merchant ACRA Number for register to system",
            "required": true,
            "type": "string"
          },
          {
            "name": "business_profile",
            "in": "formData",
            "description": "The company ACRA Business Profile for register to system",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/merchant/list": {
      "get": {
        "tags": [
          "merchant"
        ],
        "summary": "Function to get Merchant list",
        "description": "",
        "operationId": "getAllMerchants",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/merchant/view": {
      "get": {
        "tags": [
          "merchant"
        ],
        "summary": "Function to view Merchant details",
        "description": "",
        "operationId": "getMerchantView",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/merchant/verify/:merchant_id": {
      "patch": {
        "tags": [
          "merchant"
        ],
        "summary": "Verify merchant",
        "description": "",
        "operationId": "verifyMerchant",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "merchant_id",
            "in": "path",
            "description": "The merchant ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "The merchant status set to approve",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },    
    "/merchant/search": {
      "patch": {
        "tags": [
          "merchant"
        ],
        "summary": "Search merchant",
        "description": "",
        "operationId": "searchMerchant",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "description": "The merchant keyword",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/merchant/edit": {
      "patch": {
        "tags": [
          "merchant"
        ],
        "summary": "Update merchant",
        "description": "",
        "operationId": "editMerchant",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "merchant_id",
            "in": "query",
            "description": "The merchant ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "The Merchant name for register to system",
            "required": true,
            "type": "string"
          },
          {
            "name": "contact_name",
            "in": "formData",
            "description": "The company contact person for register to system",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "The merchant email for register to system",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "The merchant password for register to system",
            "required": true,
            "type": "string"
          },
          {
            "name": "office_phone_number",
            "in": "formData",
            "description": "The company office number for register to system",
            "required": true,
            "type": "string"
          },
          {
            "name": "office_address",
            "in": "formData",
            "description": "The Merchant address for register to system",
            "required": true,
            "type": "string"
          },
          {
            "name": "acra_number",
            "in": "formData",
            "description": "The Merchant ACRA Number for register to system",
            "required": true,
            "type": "string"
          },
          {
            "name": "business_profile",
            "in": "formData",
            "description": "The company ACRA Business Profile for register to system",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },


    "/product/add": {
      "post": {
        "tags": [
          "product"
        ],
        "summary": "Add new product to system",
        "description": "",
        "operationId": "addProduct",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "The product name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "The Merchant Email address.",
            "required": true,
            "type": "string"
          },
          {
            "name": "variant",
            "in": "formData",
            "description": "The Product Variant",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The Product Description",
            "required": false,
            "type": "string"
          },

          {
            "name": "phone_number",
            "in": "formData",
            "description": "The Merchant Phone Number.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "retail_price",
            "in": "formData",
            "description": "The Product Retail Price.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "sell_price",
            "in": "formData",
            "description": "The Product Sell Price .",
            "required": true,
            "type": "string"
          },
          {
            "name": "available_qty",
            "in": "formData",
            "description": "The Product Available Quantity.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deliver_id",
            "in": "formData",
            "description": "The Product Delivery ID",
            "required": false,
            "type": "integer"
          },
          {
            "name": "category_id",
            "in": "formData",
            "description": "The Product Category ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "brand_id",
            "in": "formData",
            "description": "The Product Brand ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "product_assets",
            "in": "formData",
            "description": "The product photo(s) \n Upload at least 2 images",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/product/edit": {
      "patch": {
        "tags": [
          "product"
        ],
        "summary": "Edit product in system",
        "description": "",
        "operationId": "updateProduct",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "query",
            "description": "The product ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "The product name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "The Merchant Email address.",
            "required": true,
            "type": "string"
          },
          {
            "name": "variant",
            "in": "formData",
            "description": "The Product Variant",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The Product Description",
            "required": false,
            "type": "string"
          },

          {
            "name": "phone_number",
            "in": "formData",
            "description": "The Merchant Phone Number.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "retail_price",
            "in": "formData",
            "description": "The Product Retail Price.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "sell_price",
            "in": "formData",
            "description": "The Product Sell Price .",
            "required": true,
            "type": "string"
          },
          {
            "name": "available_qty",
            "in": "formData",
            "description": "The Product Available Quantity.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deliver_id",
            "in": "formData",
            "description": "The Product Delivery ID",
            "required": false,
            "type": "integer"
          },
          {
            "name": "category_id",
            "in": "formData",
            "description": "The Product Category ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "brand_id",
            "in": "formData",
            "description": "The Product Brand ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "product_assets",
            "in": "formData",
            "description": "The product photo(s)",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/product/view": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "view product details",
        "description": "",
        "operationId": "getProductView",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "query",
            "description": "The Product ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/product/list": {
      "post": {
        "tags": [
          "product"
        ],
        "summary": "Function to get product list",
        "description": "",
        "operationId": "getFilterProductList",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The Product List",
            "required": true,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The Product Page Size",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/product/delete": {
      "delete": {
        "tags": [
          "product"
        ],
        "summary": "Delete Product ",
        "description": "",
        "operationId": "deleteProduct",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "formData",
            "description": "The Product ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/product/soft-delete": {
      "delete": {
        "tags": [
          "product"
        ],
        "summary": "Delete Product ",
        "description": "",
        "operationId": "softDeleteProduct",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "formData",
            "description": "The Product ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/product/approve": {
      "post": {
        "tags": [
          "product"
        ],
        "summary": "Update product status to approve",
        "description": "",
        "operationId": "approveProduct",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "formData",
            "description": "The product status set to approve",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/product/reject": {
      "post": {
        "tags": [
          "product"
        ],
        "summary": "update product status to rejected.",
        "description": "",
        "operationId": "rejectProduct",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "formData",
            "description": "The product status set to rejected",
            "required": true,
            "type": "integer"
          }

        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/product/set-status": {
      "post": {
        "tags": [
          "product"
        ],
        "summary": "Function to set product status",
        "description": "",
        "operationId": "setProductStatus",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "formData",
            "description": "Update the product status",
            "required": true,
            "type": "integer"
          },
          {
            "name": "product_id",
            "in": "path",
            "description": "The Product ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/product/list-admin": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "Function to get all product admin list",
        "description": "",
        "operationId": "getFilterProductListAdmin",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The Admin Filter",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/product/list-admin-by-status": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "Function to get products Admin List by status",
        "description": "",
        "operationId": "getFilterProductListAdmin",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "The Product Status",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/product/merchant/list": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "Function to get list of product Merchant.",
        "description": "",
        "operationId": "getAllMerchantProducts",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "merchant_id",
            "in": "query",
            "description": "The product's merchant ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/product/merchant/list-by-category": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "Function to get list of Product Merchant by Category",
        "description": "",
        "operationId": "getAllMerchantProductsByCategory",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "query",
            "description": "The Product Category ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "merchant_id",
            "in": "query",
            "description": "The Product Merchant ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/product/recommended/list": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "Get all recommended product list by category.",
        "description": "",
        "operationId": "getProductRecommendedList",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "query",
            "description": "The Product Category ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/product/hot/list": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "Get all product list by category",
        "description": "",
        "operationId": "getProductHotList",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "query",
            "description": "The Product Category ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/product/top/list": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "Get all top products list by category ",
        "description": "",
        "operationId": "getProductTopList",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "query",
            "description": "The Product Category ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/product/new/list": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "Get new products list by category ",
        "description": "",
        "operationId": "getProductNewList",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "query",
            "description": "The Product Category ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/product/popular/list": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "Get popular products list by category ",
        "description": "",
        "operationId": "getProductPopularList",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "query",
            "description": "The Product Category ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/product/like/list": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "Get all product likes list by product id ",
        "description": "",
        "operationId": "getProductLikesList",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "query",
            "description": "The Product ID that is being liked",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/product/like": {
      "post": {
        "tags": [
          "product"
        ],
        "summary": "User like Product ",
        "description": "",
        "operationId": "likeProduct",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "formData",
            "description": "Allow user to like a product.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/product/recommend": {
      "post": {
        "tags": [
          "product"
        ],
        "summary": "Function to recommend a product",
        "description": "",
        "operationId": "recommendProduct",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "formData",
            "description": "Allow user to recommend a product.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },


    "/product-brand/add": {
      "post": {
        "tags": [
          "product-brand"
        ],
        "summary": "Add new brand to system",
        "description": "",
        "operationId": "addBrand",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "The brand name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The brand Description.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fee",
            "in": "formData",
            "description": "The brand transaction fee",
            "required": true,
            "type": "integer"
          }


        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/product-brand/edit": {
      "patch": {
        "tags": [
          "product-brand"
        ],
        "summary": "Edit brand info in the system",
        "description": "",
        "operationId": "editBrand",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "product_brand_id",
            "in": "query",
            "description": "The Product Brand ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "The Product Brand name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The Product Brand Description.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fee",
            "in": "formData",
            "description": "The Product Brand transaction fee",
            "required": true,
            "type": "integer"
          }

        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/product-brand/list": {
      "get": {
        "tags": [
          "product-brand"
        ],
        "summary": "Function to get product brand list",
        "description": "",
        "operationId": "getBrands",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/product-brand/view": {
      "get": {
        "tags": [
          "product-brand"
        ],
        "summary": "view product brand details",
        "description": "",
        "operationId": "getProductBrandDetail",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "product_brand_id",
            "in": "query",
            "description": "The product brand id.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/product-brand/delete": {
      "delete": {
        "tags": [
          "product-brand"
        ],
        "summary": "Function to delete product's brand ",
        "description": "",
        "operationId": "deleteBrand",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "product_brand_id",
            "in": "query",
            "description": "The product brand id.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/product-brand/soft-delete": {
      "delete": {
        "tags": [
          "product-brand"
        ],
        "summary": "Function to soft delete Product Brand ",
        "description": "",
        "operationId": "softDeleteBrand",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "product_brand_id",
            "in": "query",
            "description": "The product brand id.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },


    "/product-category/add": {
      "post": {
        "tags": [
          "product-category"
        ],
        "summary": "Add new category to system",
        "description": "",
        "operationId": "addCategory",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "The category name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The category Description.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fee",
            "in": "formData",
            "description": "The category transaction fee",
            "required": true,
            "type": "integer"
          }


        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/product-category/edit": {
      "patch": {
        "tags": [
          "product-category"
        ],
        "summary": "Edit category info in the system",
        "description": "",
        "operationId": "editCategory",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "product_category_id",
            "in": "query",
            "description": "The Product category ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "The category name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The category Description.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fee",
            "in": "formData",
            "description": "The category transaction fee",
            "required": true,
            "type": "integer"
          }


        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/product-category/list": {
      "get": {
        "tags": [
          "product-category"
        ],
        "summary": "Function to get product categories list",
        "description": "",
        "operationId": "getCategories",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/product-category/view": {
      "get": {
        "tags": [
          "product-category"
        ],
        "summary": "view product categories details",
        "description": "",
        "operationId": "getProductCategoryDetail",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "product_category_id",
            "in": "query",
            "description": "The product category id.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/product-category/list-by-merchant": {
      "get": {
        "tags": [
          "product-category"
        ],
        "summary": "Function to get list of product category by Merchant.",
        "description": "",
        "operationId": "getAllProductCategoryByMerchant",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "merchant_id",
            "in": "query",
            "description": "The merchant ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/product-category/delete": {
      "delete": {
        "tags": [
          "product-category"
        ],
        "summary": "Function to delete product's Category ",
        "description": "",
        "operationId": "deleteCategory",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "product_category_id",
            "in": "query",
            "description": "The product category id.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/product-category/soft-delete": {
      "delete": {
        "tags": [
          "product-category"
        ],
        "summary": "Function to soft delete Product category ",
        "description": "",
        "operationId": "softDeleteCategory",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "product_category_id",
            "in": "query",
            "description": "The product category id.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/product-category/position": {
      "get": {
        "tags": [
          "product-category"
        ],
        "summary": "Function to get product categories posiition",
        "description": "",
        "operationId": "getCategoryPosition",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/product-category/resolve": {
      "post": {
        "tags": [
          "product-category"
        ],
        "summary": "Function to post product categories resolve",
        "description": "",
        "operationId": "getCategoriesResolve",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/product-categorys/position": {
      "post": {
        "tags": [
          "product-category"
        ],
        "summary": "update product category position",
        "description": "",
        "operationId": "updateCategoryPosition",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "formData",
            "description": "The category ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "position",
            "in": "formData",
            "description": "The category position.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },


    "/product-delivery/add": {
      "post": {
        "tags": [
          "product-delivery"
        ],
        "summary": "Add new delivery agent to system",
        "description": "",
        "operationId": "addDelivery",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "The delivery agent name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The delivery Description.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fee",
            "in": "formData",
            "description": "The delivery transaction fee",
            "required": true,
            "type": "integer"
          }


        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/product-delivery/edit": {
      "patch": {
        "tags": [
          "product-delivery"
        ],
        "summary": "Edit delivery agent info in the system",
        "description": "",
        "operationId": "editDelivery",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "product_deliveries_id",
            "in": "query",
            "description": "The delivery ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "The delivery agent name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The delivery Description.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fee",
            "in": "formData",
            "description": "The delivery transaction fee in percentage",
            "required": true,
            "type": "integer"
          }


        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/product-delivery/list": {
      "get": {
        "tags": [
          "product-delivery"
        ],
        "summary": "Function to get product Delivery Agents",
        "description": "",
        "operationId": "getDeliveries",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/product-delivery/view": {
      "get": {
        "tags": [
          "product-delivery"
        ],
        "summary": "view product delivery agent's details",
        "description": "",
        "operationId": "getProductDeliveryDetail",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "product_deliveries_id",
            "in": "query",
            "description": "The delivery ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/product-delivery/delete": {
      "delete": {
        "tags": [
          "product-delivery"
        ],
        "summary": "Function to delete Product's Delivery Agent ",
        "description": "",
        "operationId": "deleteDelivery",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "product_deliveries_id",
            "in": "query",
            "description": "The delivery ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/product-delivery/soft-delete": {
      "delete": {
        "tags": [
          "product-delivery"
        ],
        "summary": "Function to soft delete Product's Delivery Agent ",
        "description": "",
        "operationId": "softDeleteDelivery",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },

    "/product-assets/add": {
      "post": {
        "tags": [
          "product-assets"
        ],
        "summary": "Add Product Asset",
        "description": "",
        "operationId": "addProductAsset",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "The product id.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The product Assets Description",
            "required": false,
            "type": "string"
          },
          {
            "name": "product_assets",
            "in": "formData",
            "description": "The product assets files.",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/product-assets/edit": {
      "patch": {
        "tags": [
          "product-assets"
        ],
        "summary": "Update product assets",
        "description": "",
        "operationId": "editProductAsset",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "The product id.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The product description",
            "required": false,
            "type": "string"
          },
          {
            "name": "product_assets",
            "in": "formData",
            "description": "The product assets files.",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/product-assets/delete": {
      "delete": {
        "tags": [
          "product-assets"
        ],
        "summary": "Function to delete Product's Assets ",
        "description": "",
        "operationId": "deleteProductAsset",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "formData",
            "description": "The Product ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "product_asset_id",
            "in": "query",
            "description": "The Product Asset ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },

    "/cart/add": {
      "post": {
        "tags": [
          "cart"
        ],
        "summary": "Add new item to cart",
        "description": "",
        "operationId": "addCart",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "formData",
            "description": "The Session ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "product_id",
            "in": "formData",
            "description": "The product ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "quantity",
            "in": "formData",
            "description": "The product quantity",
            "required": true,
            "type": "integer"
          }

        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/cart/get": {
      "get": {
        "tags": [
          "cart"
        ],
        "summary": "Function to get cart details",
        "description": "",
        "operationId": "getCartDetail",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "formData",
            "description": "The Session ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/cart/remove": {
      "delete": {
        "tags": [
          "cart"
        ],
        "summary": "remove cart item ",
        "description": "",
        "operationId": "removeCart",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "formData",
            "description": "The Session ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "product_id",
            "in": "formData",
            "description": "The product ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/cart/apply-voucher": {
      "post": {
        "tags": [
          "cart"
        ],
        "summary": "Apply voucher to items in cart",
        "description": "",
        "operationId": "applyVoucher",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "voucher_id",
            "in": "formData",
            "description": "The Voucher ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },

    "/voucher/add": {
      "post": {
        "tags": [
          "voucher"
        ],
        "summary": "Add new voucher to system",
        "description": "",
        "operationId": "addVoucher",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "The voucher name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The voucher description",
            "required": true,
            "type": "integer"
          },
          {
            "name": "product_id",
            "in": "formData",
            "description": "The product voucher belongs to.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "category_id",
            "in": "formData",
            "description": "The category voucher belongs to.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "brand_id",
            "in": "formData",
            "description": "The brand voucher belongs to.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "code",
            "in": "formData",
            "description": "The voucher's code.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "type",
            "in": "formData",
            "description": "The voucher type.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "minimum_purchase",
            "in": "formData",
            "description": "The voucher's minimum purchase.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "quantity",
            "in": "formData",
            "description": "The voucher's quantity.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "amount",
            "in": "formData",
            "description": "The voucher's amount.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "The Voucher status : 1 Active, 0 Inactive (default 1)",
            "required": true,
            "type": "integer"
          }


        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/voucher/:voucher_id/update": {
      "patch": {
        "tags": [
          "voucher"
        ],
        "summary": "Update voucher data in the system",
        "description": "",
        "operationId": "editVoucher",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "voucher_id",
            "in": "query",
            "description": "The product voucher ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "The voucher name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The voucher description",
            "required": true,
            "type": "integer"
          },
          {
            "name": "product_id",
            "in": "formData",
            "description": "The product voucher belongs to.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "category_id",
            "in": "formData",
            "description": "The category voucher belongs to.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "brand_id",
            "in": "formData",
            "description": "The brand voucher belongs to.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "type",
            "in": "formData",
            "description": "The voucher type.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "minimum_purchase",
            "in": "formData",
            "description": "The voucher's minimum purchase.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "quantity",
            "in": "formData",
            "description": "The voucher's quantity.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "amount",
            "in": "formData",
            "description": "The voucher's amount.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "The Voucher status : 1 Active, 0 Inactive (default 1)",
            "required": true,
            "type": "integer"
          }


        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/voucher/my-voucher": {
      "get": {
        "tags": [
          "voucher"
        ],
        "summary": "Get list of vouchers",
        "description": "",
        "operationId": "getVouchers",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/voucher/:voucher_id/delete": {
      "delete": {
        "tags": [
          "voucher"
        ],
        "summary": "Delete voucher record.",
        "description": "",
        "operationId": "deleteVoucher",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "voucher_id",
            "in": "query",
            "description": "The product voucher ID.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/voucher/redeem": {
      "post": {
        "tags": [
          "voucher"
        ],
        "summary": "Redeem a voucher",
        "description": "",
        "operationId": "redeemVoucher",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "code",
            "in": "formData",
            "description": "The voucher's code.",
            "required": true,
            "type": "integer"
          }

        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },

    "/order/list": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Function to get orders list",
        "description": "",
        "operationId": "getOrderList",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "query",
            "description": "The Order Session ID.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/order/{order_id}/detail": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Function to get order details",
        "description": "",
        "operationId": "getOrderDetail",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "description": "The Order ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/order/checkout": {
      "post": {
        "tags": [
          "order"
        ],
        "summary": "checkout ordered items from the system.",
        "description": "",
        "operationId": "checkout",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
            {
              "name": "session_id",
              "in": "query",
              "description": "The order session ID",
              "required": true,
              "type": "string"
            },
          {
            "name": "shipping_address",
            "in": "body",
            "description": "The buyer's address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/order/_webhook/hitpay": {
      "post": {
        "tags": [
          "order"
        ],
        "summary": "Handle Order Payment Transaction. ",
        "description": "",
        "operationId": "hitpay",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "payment_request_id",
            "in": "formData",
            "description": "The Payment Request ID",
            "required": true,
            "type": "integer"
          }

        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/order/order-items": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "list Order Items",
        "description": "",
        "operationId": "order-items",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "query",
            "description": "The Order ID",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The User ID",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "The Order status ",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/order/{order_id}/refund": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Order Refund",
        "description": "",
        "operationId": "refund",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "description": "The Order ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "message",
            "in": "formData",
            "description": "The Refund Message",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/order/{order_id}/confirm-received": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Order Confirm Recieved",
        "description": "",
        "operationId": "confirm-recieved",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "description": "The Order ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/order/{order_id}/set-status": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Set Order Item Status",
        "description": "",
        "operationId": "set-status",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "description": "The Order Item ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "The Order Item Status",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/order/list-admin": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Get filtered Order List Admin",
        "description": "",
        "operationId": "list-admin",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "formData",
            "description": "The Status in query or body",
            "required": true,
            "type": "integer"
          },
          {
            "name": "order_id",
            "in": "query",
            "description": "The Order ID",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The Page Size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/order/set-past": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Set Order to Pasr",
        "description": "",
        "operationId": "set-past",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "query",
            "description": "The Order ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/order/set-completed": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Set Order Completed",
        "description": "",
        "operationId": "set-completed",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "query",
            "description": "The Order ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/order/export-order": {
      "post": {
        "tags": [
          "order"
        ],
        "summary": "Function to add export orders",
        "description": "",
        "operationId": "exportOrder",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "The Order status. Optional, if thiis field empty, will automatically get order with status (Processed) / 2",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/order/upload-order-delivery": {
      "post": {
        "tags": [
          "order"
        ],
        "summary": "Function to upload order delviery",
        "description": "",
        "operationId": "uploadOrderDelivery",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/order/download-courier-list": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Function to get download courier list.",
        "description": "",
        "operationId": "downloadCourierList",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/order/download-order-template": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Function to get download Order Template.",
        "description": "",
        "operationId": "downloadOrderTemplate",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },


    "/reviews/add": {
      "post": {
        "tags": [
          "reviews"
        ],
        "summary": "Rate and post review on ordered product.",
        "description": "",
        "operationId": "addReview",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "description": "Order ID of the product ordered",
            "required": true,
            "type": "integer"
          },
          {
            "name": "product_id",
            "in": "path",
            "description": "product ID of the product ordered",
            "required": true,
            "type": "integer"
          },
          {
            "name": "score",
            "in": "formData",
            "description": "Customer/User rate the order from 1 - 5. (1 - lowest, 5 - highest)",
            "required": false,
            "type": "integer"
          },
          {
            "name": "comment",
            "in": "formData",
            "description": "Write a review for the ordered product.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/reveiws/list": {
      "get": {
        "tags": [
          "reviews"
        ],
        "summary": "Get all reviews that belongs to a product",
        "description": "",
        "operationId": "getProductReviews",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "query",
            "description": "The product ID that reviews belongs to",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/reveiws/list-by-order-items": {
      "get": {
        "tags": [
          "reviews"
        ],
        "summary": "Get list of review by ordered items",
        "description": "",
        "operationId": "list-bt-order-items",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "query",
            "description": "The Review List Either by order_id or user_id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "The review status either by query or body",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/reveiws/list-by-order-id": {
      "get": {
        "tags": [
          "reviews"
        ],
        "summary": "Get product reviews list by order ID",
        "description": "",
        "operationId": "list-by-order-id",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "query",
            "description": "The Review List Either by product_id or order_id or user_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/reveiws/list-by-id": {
      "get": {
        "tags": [
          "reviews"
        ],
        "summary": "Get review list by order ID",
        "description": "",
        "operationId": "list-by-id",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "query",
            "description": "The Review List Either by product_id or order_id or user_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },


    "/user-address/add": {
      "post": {
        "tags": [
          "user-address"
        ],
        "summary": "Add address to authenticated user in the system",
        "description": "",
        "operationId": "addUserAddress",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "full_address",
            "in": "formData",
            "description": "The Full Address of the user ",
            "required": true,
            "type": "string"
          },
          {
            "name": "building_name",
            "in": "formData",
            "description": "The user's address building name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "postal_code",
            "in": "formData",
            "description": "The user's postal code.",
            "required": true,
            "type": "string"
          },
          {
            "name": "block_no",
            "in": "formData",
            "description": "The user's address block number.",
            "required": true,
            "type": "string"
          },
          {
            "name": "postal_code",
            "in": "formData",
            "description": "The user's address postal code ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/user-address/edit": {
      "patch": {
        "tags": [
          "user-address"
        ],
        "summary": "Update user address in the system",
        "description": "",
        "operationId": "editUserAddress",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "user_address_id",
            "in": "query",
            "description": "The user address ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "full_address",
            "in": "formData",
            "description": "The Full Address of the user ",
            "required": true,
            "type": "string"
          },
          {
            "name": "building_name",
            "in": "formData",
            "description": "The user's address building name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "postal_code",
            "in": "formData",
            "description": "The user's postal code.",
            "required": true,
            "type": "string"
          },
          {
            "name": "block_no",
            "in": "formData",
            "description": "The user's address block number.",
            "required": true,
            "type": "string"
          },
          {
            "name": "postal_code",
            "in": "formData",
            "description": "The user's address postal code ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/user-address/list": {
      "get": {
        "tags": [
          "user-address"
        ],
        "summary": "get users address list in the system",
        "description": "",
        "operationId": "getUsersAddress",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user-address/view": {
      "get": {
        "tags": [
          "user-address"
        ],
        "summary": "Get a user address details",
        "description": "",
        "operationId": "getUserAddress",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "user_address_id",
            "in": "query",
            "description": "The user address ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/user-address/delete": {
      "delete": {
        "tags": [
          "user-address"
        ],
        "summary": "delete user address from the system",
        "description": "",
        "operationId": "deleteUserAddress",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "user_address_id",
            "in": "query",
            "description": "The user address ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },


    "/push-notifications/edit": {
      "patch": {
        "tags": [
          "push-notifications"
        ],
        "summary": "update push notifications message",
        "description": "",
        "operationId": "updatePushNotification",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_updates",
            "in": "formData",
            "description": "An order updates",
            "required": true,
            "type": "integer"
          },
          {
            "name": "chats",
            "in": "formData",
            "description": "The chats",
            "required": true,
            "type": "integer"
          },
          {
            "name": "promotions",
            "in": "formData",
            "description": "The promotions",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "The Status",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/push-notifications/view": {
      "get": {
        "tags": [
          "push-notifications"
        ],
        "summary": "View Push Notification Details by Authenticated User.",
        "description": "",
        "operationId": "getPushNotification",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },

    "/email-notifications/view": {
      "get": {
        "tags": [
          "email-notifications"
        ],
        "summary": "View email notification details by Authenticated User",
        "description": "",
        "operationId": "getEmailNotification",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/email-notifications/edit": {
      "patch": {
        "tags": [
          "email-notifications"
        ],
        "summary": "update email notifications message",
        "description": "",
        "operationId": "updateEmailNotification",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_updates",
            "in": "formData",
            "description": "An order updates",
            "required": true,
            "type": "integer"
          },
          {
            "name": "newsletter",
            "in": "formData",
            "description": "The Newsletter ",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "The Notification Status",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },

    "/notification/list": {
      "get": {
        "tags": [
          "notification"
        ],
        "summary": "Get list of all unread notification",
        "description": "",
        "operationId": "getNotification",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/notification/read": {
      "patch": {
        "tags": [
          "notification"
        ],
        "summary": "update notification status to read.",
        "description": "",
        "operationId": "updateNotification",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "notification_id",
            "in": "query",
            "description": "An Notification ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/notification/delete": {
      "delete": {
        "tags": [
          "notification"
        ],
        "summary": "delete notification record",
        "description": "",
        "operationId": "deleteNotification",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "notification_id",
            "in": "query",
            "description": "An Notification ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },    
    "/notification/detail/{id}": {
      "get": {
        "tags": [
          "notification"
        ],
        "summary": "get notification details",
        "description": "",
        "operationId": "getNotificationDetails",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "An Notification ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },

    "/banner/add": {
      "post": {
        "tags": [
          "banner"
        ],
        "summary": "Add new banner record to the system",
        "description": "",
        "operationId": "addBanner",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "title",
            "in": "formData",
            "description": "The Banner Title",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The Banner Description ",
            "required": true,
            "type": "string"
          },
          {
            "name": "url",
            "in": "formData",
            "description": "The Banner Url.",
            "required": true,
            "type": "string"
          },
          {
            "name": "image",
            "in": "formData",
            "description": "The Banner Image ",
            "required": true,
            "type": "string"
          },
          {
            "name": "image_mobile",
            "in": "formData",
            "description": "The Banner Image Mobile ",
            "required": false,
            "type": "string"
          },
          {
            "name": "caption1",
            "in": "formData",
            "description": "The Banner Caption 1 ",
            "required": true,
            "type": "string"
          },
          {
            "name": "caption2",
            "in": "formData",
            "description": "The Banner Caption 2 ",
            "required": true,
            "type": "string"
          },
          {
            "name": "caption3",
            "in": "formData",
            "description": "The Banner Caption 3",
            "required": true,
            "type": "string"
          },
          {
            "name": "homepage_title",
            "in": "formData",
            "description": "The Banner Homepage Title ",
            "required": true,
            "type": "string"
          },
          {
            "name": "publish_date_from",
            "in": "formData",
            "description": "The Banner Publish Date From",
            "required": false,
            "type": "string"
          },
          {
            "name": "publish_date_to",
            "in": "formData",
            "description": "The Banner Publish Date To",
            "required": false,
            "type": "string"
          },
          {
            "name": "url_mobile",
            "in": "formData",
            "description": "The Banner Url Mobile ",
            "required": true,
            "type": "string"
          },
          {
            "name": "redirect_type",
            "in": "formData",
            "description": "The Banner Redirect Type ",
            "required": false,
            "type": "string"
          },
          {
            "name": "redirect_ref_id",
            "in": "formData",
            "description": "The Banner Redirect Ref ID ",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/banner/edit": {
      "patch": {
        "tags": [
          "banner"
        ],
        "summary": "Update banner record in the system",
        "description": "",
        "operationId": "editBanner",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "banner_id",
            "in": "query",
            "description": "The Banner ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "The Banner Title",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The Banner Description ",
            "required": true,
            "type": "string"
          },
          {
            "name": "url",
            "in": "formData",
            "description": "The Banner Url.",
            "required": true,
            "type": "string"
          },
          {
            "name": "image",
            "in": "formData",
            "description": "The Banner Image ",
            "required": true,
            "type": "string"
          },
          {
            "name": "image_mobile",
            "in": "formData",
            "description": "The Banner Image Mobile ",
            "required": true,
            "type": "string"
          },
          {
            "name": "caption1",
            "in": "formData",
            "description": "The Banner Caption 1 ",
            "required": true,
            "type": "string"
          },
          {
            "name": "caption2",
            "in": "formData",
            "description": "The Banner Caption 2 ",
            "required": true,
            "type": "string"
          },
          {
            "name": "caption3",
            "in": "formData",
            "description": "The Banner Caption 3",
            "required": true,
            "type": "string"
          },
          {
            "name": "homepage_title",
            "in": "formData",
            "description": "The Banner Homepage Title ",
            "required": true,
            "type": "string"
          },
          {
            "name": "publish_date_from",
            "in": "formData",
            "description": "The Banner Publish Date From",
            "required": false,
            "type": "string"
          },
          {
            "name": "publish_date_to",
            "in": "formData",
            "description": "The Banner Publish Date To",
            "required": false,
            "type": "string"
          },
          {
            "name": "url_mobile",
            "in": "formData",
            "description": "The Banner Url Mobile ",
            "required": true,
            "type": "string"
          },
          {
            "name": "redirect_type",
            "in": "formData",
            "description": "The Banner Redirect Type ",
            "required": false,
            "type": "string"
          },
          {
            "name": "redirect_ref_id",
            "in": "formData",
            "description": "The Banner Redirect Ref ID ",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/banner/list": {
      "get": {
        "tags": [
          "banner"
        ],
        "summary": "get banner list records in the system",
        "description": "",
        "operationId": "getBannerList",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "description": "The Banner Title",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/banner/view": {
      "get": {
        "tags": [
          "banner"
        ],
        "summary": "Get a banner record details",
        "description": "",
        "operationId": "getBannerDetails",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "banner_id",
            "in": "query",
            "description": "The Banner ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/banner/delete": {
      "delete": {
        "tags": [
          "banner"
        ],
        "summary": "delete banner record from the system",
        "description": "",
        "operationId": "deleteBanner",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "banner_id",
            "in": "formData",
            "description": "The Banner ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },

    "/prize-setting/add": {
      "post": {
        "tags": [
          "prize-setting"
        ],
        "summary": "Add New Prize Setting",
        "description": "",
        "operationId": "addPrizeSetting",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "The name ",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The description.",
            "required": true,
            "type": "string"
          },
          {
            "name": "prizes",
            "in": "formData",
            "description": "The prizes.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "type",
            "in": "formData",
            "description": "The type.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/prize-setting/{id}": {
      "put": {
        "tags": [
          "prize-setting"
        ],
        "summary": "Update Prize Setting Record in the system",
        "description": "",
        "operationId": "updatePrizeSetting",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Prize Setting ID ",
            "required": true,
            "type": "integer"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "The name ",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The description.",
            "required": true,
            "type": "string"
          },
          {
            "name": "prizes",
            "in": "formData",
            "description": "The prizes.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "type",
            "in": "formData",
            "description": "The type.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/prize-setting/list": {
      "get": {
        "tags": [
          "prize-setting"
        ],
        "summary": "get Prize Setting list in the system",
        "description": "",
        "operationId": "getAllPrizeSetting",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The Prize Setting Page",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The Prize Setting Page Size ",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/prize-settingg/{id}": {
      "get": {
        "tags": [
          "prize-setting"
        ],
        "summary": "Get a prize setting details",
        "description": "",
        "operationId": "getPrizeSetting",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The prize setting ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/prize-settings/{id}": {
      "delete": {
        "tags": [
          "prize-setting"
        ],
        "summary": "delete Prize Setting from the system",
        "description": "",
        "operationId": "deletePrizeSetting",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The user address ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },

    "/spinwheel-setting/add": {
      "post": {
        "tags": [
          "spinwheel-setting"
        ],
        "summary": "Add Spin wheel Setting to the system",
        "description": "",
        "operationId": "addSpinwheelSetting",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "The name ",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The description.",
            "required": false,
            "type": "string"
          },
          {
            "name": "prize_id",
            "in": "formData",
            "description": "The prize id.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "num_spin",
            "in": "formData",
            "description": "The num spin.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "start_date",
            "in": "formData",
            "description": "The start date ",
            "required": false,
            "type": "date"
          },
          {
            "name": "end_date",
            "in": "formData",
            "description": "The end date ",
            "required": false,
            "type": "date"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "The status ",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/spinwheel-setting/edit": {
      "patch": {
        "tags": [
          "spinwheel-setting"
        ],
        "summary": "Update Spin wheel Setting in the system",
        "description": "",
        "operationId": "updateSpinwheelSetting",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "spinwheel_setting_id",
            "in": "query",
            "description": "The spin wheel setting ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "The name ",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The description.",
            "required": false,
            "type": "string"
          },
          {
            "name": "prize_id",
            "in": "formData",
            "description": "The prize id.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "num_spin",
            "in": "formData",
            "description": "The num spin.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "start_date",
            "in": "formData",
            "description": "The start date ",
            "required": false,
            "type": "date"
          },
          {
            "name": "end_date",
            "in": "formData",
            "description": "The end date ",
            "required": false,
            "type": "date"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "The status ",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/spinwheel-setting/list": {
      "get": {
        "tags": [
          "spinwheel-setting"
        ],
        "summary": "get All Spin wheel Setting list in the system by Name or Status",
        "description": "",
        "operationId": "getAllSpinwheelSetting",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/spinwheel-setting/view": {
      "get": {
        "tags": [
          "spinwheel-setting"
        ],
        "summary": "Get a Spin wheel Setting details",
        "description": "",
        "operationId": "getSpinwheelSetting",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "spinwheel_setting_id",
            "in": "query",
            "description": "The spin wheel setting ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/spinwheel-setting/{id}": {
      "delete": {
        "tags": [
          "spinwheel-setting"
        ],
        "summary": "delete Spin wheel setting from the system",
        "description": "",
        "operationId": "deleteSpinwheelSetting",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The spin wheel ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },

    "/manufacturer/add": {
      "post": {
        "tags": [
          "manufacturer"
        ],
        "summary": "Add Manufacturer to the system",
        "description": "",
        "operationId": "addManufacturer",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "The name ",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The description.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/manufacturer/edit": {
      "patch": {
        "tags": [
          "manufacturer"
        ],
        "summary": "Update manufacturer in the system",
        "description": "",
        "operationId": "editManufacturer",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "manufacturer_id",
            "in": "query",
            "description": "The manufacturer ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "The name ",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The description.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/manufacturer/list": {
      "get": {
        "tags": [
          "manufacturer"
        ],
        "summary": "get All manufacturer list in the system ",
        "description": "",
        "operationId": "listManufacturer",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/manufacturer/view": {
      "get": {
        "tags": [
          "manufacturer"
        ],
        "summary": "Get a manufacturer details",
        "description": "",
        "operationId": "viewManufacturer",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "manufacturer_id",
            "in": "query",
            "description": "The manufacturer ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/manufacturer/delete": {
      "delete": {
        "tags": [
          "manufacturer"
        ],
        "summary": "delete manufacturer from the system",
        "description": "",
        "operationId": "deleteManufacturer",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "manufacturer_id",
            "in": "formData",
            "description": "The manufacturer ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },

    "/point-setting/add": {
      "post": {
        "tags": [
          "point-setting"
        ],
        "summary": "Add point setting to the system",
        "description": "",
        "operationId": "add",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "The name ",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The description.",
            "required": false,
            "type": "string"
          },
          {
            "name": "points",
            "in": "formData",
            "description": "The point",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/point-setting/edit": {
      "patch": {
        "tags": [
          "point-setting"
        ],
        "summary": "Update point setting in the system",
        "description": "",
        "operationId": "edit",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "point-setting_id",
            "in": "query",
            "description": "The point setting ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "The name ",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The description.",
            "required": true,
            "type": "string"
          },
          {
            "name": "points",
            "in": "formData",
            "description": "The point",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/point-setting/list": {
      "get": {
        "tags": [
          "point-setting"
        ],
        "summary": "get All point setting list in the system ",
        "description": "",
        "operationId": "list",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/point-setting/view": {
      "get": {
        "tags": [
          "point-setting"
        ],
        "summary": "Get a point-setting details",
        "description": "",
        "operationId": "view",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "point-setting_id",
            "in": "query",
            "description": "The point-setting ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/point-setting/delete": {
      "delete": {
        "tags": [
          "point-setting"
        ],
        "summary": "delete point-setting from the system",
        "description": "",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "point-setting_id",
            "in": "formData",
            "description": "The manufacturer ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/point-setting/store-invest": {
      "get": {
        "tags": [
          "point-setting"
        ],
        "summary": "Get  point from store invest",
        "description": "",
        "operationId": "view",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "The token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },

    "/user-prize/add": {
      "post": {
        "tags": [
          "user-prize"
        ],
        "summary": "Add New user prize",
        "description": "",
        "operationId": "addUserPrizeLog",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "prize_id",
            "in": "formData",
            "description": "The name Prize ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "user_id",
            "in": "formData",
            "description": "The User ID.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/user-prize/claimed": {
      "patch": {
        "tags": [
          "user-prize"
        ],
        "summary": "Update User Prize Status to Claim in the system",
        "description": "",
        "operationId": "setToClaimed",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "user_prize_id",
            "in": "formData",
            "description": "The User Prize ID ",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/user-prize/redeemed": {
      "patch": {
        "tags": [
          "user-prize"
        ],
        "summary": "Update User Prize Status to Redeemed in the system",
        "description": "",
        "operationId": "setToRedeemed",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "user_prize_id",
            "in": "formData",
            "description": "The User Prize ID ",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/user-prize/expired": {
      "patch": {
        "tags": [
          "user-prize"
        ],
        "summary": "Update User Prize Status to Expired in the system",
        "description": "",
        "operationId": "setToExpired",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "user_prize_id",
            "in": "formData",
            "description": "The User Prize ID ",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/user-prize/forfeited": {
      "patch": {
        "tags": [
          "user-prize"
        ],
        "summary": "Update User Prize Status to Forfeited in the system",
        "description": "",
        "operationId": "setToForfeited",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "user_prize_id",
            "in": "formData",
            "description": "The User Prize ID ",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/user-prize/list": {
      "get": {
        "tags": [
          "user-prize"
        ],
        "summary": "get User Prize list in the system",
        "description": "",
        "operationId": "getAllUserPrizeLog",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },


    "/daily-spin-control/add": {
      "post": {
        "tags": [
          "daily-spin-control"
        ],
        "summary": "Add New daily spin control",
        "description": "",
        "operationId": "add",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [

          {
            "name": "spin_per_user",
            "in": "formData",
            "description": "The spin per user.",
            "required": true,
            "type": "number"
          },
          {
            "name": "is_infinite",
            "in": "formData",
            "description": "The is_infinite.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "monthly_dollars",
            "in": "formData",
            "description": "The monthly dollars.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "monthly_points",
            "in": "formData",
            "description": "The monthly points.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "daily_dollars",
            "in": "formData",
            "description": "The daily dollars.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "daily_points",
            "in": "formData",
            "description": "The daily points ",
            "required": true,
            "type": "integer"
          },
          {
            "name": "options",
            "in": "formData",
            "description": "The options ",
            "required": true,
            "type": "array",
            "items": {
              "type":"object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "prize_id": {
                  "type": "integer"
                },
                "status": {
                  "type": "integer"
                },
                "total_winners": {
                  "type": "integer"
                } 
              }
            },
           "collectionFormat": "multi" 

          }
          
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/daily-spin-control/edit": {
      "patch": {
        "tags": [
          "daily-spin-control"
        ],
        "summary": "Update Prize Setting Record in the system",
        "description": "",
        "operationId": "edit",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [

          {
            "name": "id",
            "in": "formData",
            "description": "The daily spin control ID.",
            "required": true,
            "type": "integer"
          },         
          {
            "name": "spin_per_user",
            "in": "formData",
            "description": "The spin per user.",
            "required": true,
            "type": "number"
          },
          {
            "name": "is_infinite",
            "in": "formData",
            "description": "The is_infinite.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "monthly_dollars",
            "in": "formData",
            "description": "The monthly dollars.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "monthly_points",
            "in": "formData",
            "description": "The monthly points.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "daily_dollars",
            "in": "formData",
            "description": "The daily dollars.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "daily_points",
            "in": "formData",
            "description": "The daily points ",
            "required": true,
            "type": "integer"
          },
          {
            "name": "options",
            "in": "formData",
            "description": "The options ",
            "required": true,
            "type": "array",
            "items": {
              "type":"object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "prize_id": {
                  "type": "integer"
                },
                "status": {
                  "type": "integer"
                },
                "total_winners": {
                  "type": "integer"
                } 
              }
            },
           "collectionFormat": "multi" 

          }
          
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/daily-spin-control/list": {
      "get": {
        "tags": [
          "daily-spin-control"
        ],
        "summary": "get daily spin control list in the system",
        "description": "",
        "operationId": "list",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/daily-spin-controls/{id}": {
      "get": {
        "tags": [
          "daily-spin-control"
        ],
        "summary": "Get a daily spin control details",
        "description": "",
        "operationId": "view",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The daily spin ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/daily-spin-control/{id}": {
      "delete": {
        "tags": [
          "daily-spin-control"
        ],
        "summary": "delete daily-spin-control from the system",
        "description": "",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The daily spin control ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },


    "/user-spinwheel/list": {
      "get": {
        "tags": [
          "user-spinwheel"
        ],
        "summary": "get user-spinwheel list in the system",
        "description": "",
        "operationId": "list",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user-spinwheel/game": {
      "get": {
        "tags": [
          "user-spinwheel"
        ],
        "summary": "Spin a wheel",
        "description": "",
        "operationId": "game",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/user-spinwheel/view-by-user-id": {
      "get": {
        "tags": [
          "user-spinwheel"
        ],
        "summary": "Get user spinwheel details",
        "description": "",
        "operationId": "getPrizeSetting",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "description": "The user ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/user-spinwheel/view-turns-by-user-id": {
      "get": {
        "tags": [
          "user-spinwheel"
        ],
        "summary": "Get user-spinwheel turn by user ID",
        "description": "",
        "operationId": "view-turn-by-user-id",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "description": "The user ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/user-spinwheel/view-turns": {
      "get": {
        "tags": [
          "user-spinwheel"
        ],
        "summary": "Get user-spinwheel ",
        "description": "",
        "operationId": "view-turns",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    



    "/stats/info": {
      "get": {
        "tags": [
          "stats"
        ],
        "summary": "Get stat details",
        "description": "",
        "operationId": "getStatInfo",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "The Date",
            "required": true,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/stats/info-by-user-id": {
      "get": {
        "tags": [
          "stats"
        ],
        "summary": "Get stat details",
        "description": "",
        "operationId": "getStatInfo",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "The Date",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "User ID",
            "required": true,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/stats/orders-count": {
      "get": {
        "tags": [
          "stats"
        ],
        "summary": "Get Order Count",
        "description": "",
        "operationId": "getStatOrderCount",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "The Date",
            "required": true,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/stats/revenues-total": {
      "get": {
        "tags": [
          "stats"
        ],
        "summary": "Get stats total revenues",
        "description": "",
        "operationId": "getTotalRevenue",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "The Date",
            "required": true,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/stats/daily-sales": {
      "get": {
        "tags": [
          "stats"
        ],
        "summary": "Get Stat daily Sales",
        "description": "",
        "operationId": "getDailySales",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "The Date",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/stats/orders": {
      "get": {
        "tags": [
          "stats"
        ],
        "summary": "Get order stat",
        "description": "",
        "operationId": "getOrderStat",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "description": "The Date",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "The Date",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status of Orders",
            "required": true,
            "type": "string",
            "format": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },


    "/faq/questions": {
      "get": {
        "tags": [
          "faq"
        ],
        "summary": "Get All Question",
        "description": "",
        "operationId": "geFaqQuestion",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/faq/answer": {
      "post": {
        "tags": [
          "faq"
        ],
        "summary": "Get Answer",
        "description": "",
        "operationId": "getFaqAnswer",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "question_id",
            "in": "formData",
            "description": "The Question ID ",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },


    "/user-points/admin/add": {
      "post": {
        "tags": [
          "user-point"
        ],
        "summary": "Get User Points Admin",
        "description": "",
        "operationId": "addUserPointAdmin",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "point_id",
            "in": "formData",
            "description": "The point ID ",
            "required": true,
            "type": "integer"
          },
          {
            "name": "user_id",
            "in": "formData",
            "description": "The User ID ",
            "required": true,
            "type": "integer"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The description.",
            "required": true,
            "type": "string"
          },
          {
            "name": "points",
            "in": "formData",
            "description": "The points.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/user-points/admin/list": {
      "get": {
        "tags": [
          "user-point"
        ],
        "summary": "get All User Points Admin",
        "description": "",
        "operationId": "getUserPointList",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user-points/admin/view": {
      "get": {
        "tags": [
          "user-point"
        ],
        "summary": "Get User Point Admin",
        "description": "",
        "operationId": "getUserDetails",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "description": "The User ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/user-points/add": {
      "post": {
        "tags": [
          "user-point"
        ],
        "summary": "Add User Point",
        "description": "",
        "operationId": "addUserPoint",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "point_id",
            "in": "formData",
            "description": "The point ID ",
            "required": true,
            "type": "integer"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The description.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/user-points/store-invest/add": {
      "post": {
        "tags": [
          "user-point"
        ],
        "summary": "Add Point From Store Invest",
        "description": "",
        "operationId": "addStrInvestPointToStore",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "The token ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },

    "/shipping-details/add": {
      "post": {
        "tags": [
          "shipping-details"
        ],
        "summary": "Add Shipping Details",
        "description": "",
        "operationId": "add",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "formData",
            "description": "The order_id ",
            "required": true,
            "type": "integer"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "The name ",
            "required": true,
            "type": "string"
          },
          {
            "name": "contact_no",
            "in": "formData",
            "description": "The contact_no ",
            "required": false,
            "type": "number"
          },
          {
            "name": "address1",
            "in": "formData",
            "description": "The address1 ",
            "required": false,
            "type": "string"
          },
          {
            "name": "address2",
            "in": "formData",
            "description": "The address2.",
            "required": false,
            "type": "string"
          },
          {
            "name": "city",
            "in": "formData",
            "description": "The city.",
            "required": false,
            "type": "string"
          },
          {
            "name": "postal_code",
            "in": "formData",
            "description": "The postal_code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "contact_number",
            "in": "formData",
            "description": "The contact_number",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/shipping-details/edit": {
      "patch": {
        "tags": [
          "shipping-details"
        ],
        "summary": "Update shipping details Record in the system",
        "description": "",
        "operationId": "edit",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "shipping_details_id",
            "in": "query",
            "description": "The shipping details ID ",
            "required": true,
            "type": "integer"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "The name ",
            "required": true,
            "type": "string"
          },
          {
            "name": "contact_no",
            "in": "formData",
            "description": "The contact_no ",
            "required": false,
            "type": "number"
          },
          {
            "name": "address1",
            "in": "formData",
            "description": "The address1 ",
            "required": false,
            "type": "string"
          },
          {
            "name": "address2",
            "in": "formData",
            "description": "The address2.",
            "required": false,
            "type": "string"
          },
          {
            "name": "city",
            "in": "formData",
            "description": "The city.",
            "required": false,
            "type": "string"
          },
          {
            "name": "postal_code",
            "in": "formData",
            "description": "The postal_code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "contact_number",
            "in": "formData",
            "description": "The contact_number",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/shipping-details/list": {
      "get": {
        "tags": [
          "shipping-details"
        ],
        "summary": "get All Shipping Details",
        "description": "",
        "operationId": "list",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "query",
            "description": "Get All shipping details either by user_id, user_name, order_id, name, address",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_name",
            "in": "query",
            "description": "Get All shipping details either by user_id, user_name, order_id, name, address",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "Get All shipping details either by user_id, user_name, order_id, name, address",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Get All shipping details either by user_id, user_name, order_id, name, address",
            "required": false,
            "type": "string"
          },
          {
            "name": "address",
            "in": "query",
            "description": "Get All shipping details either by user_id, user_name, order_id, name, address",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/shipping-details/view": {
      "get": {
        "tags": [
          "shipping-details"
        ],
        "summary": "Get shipping details",
        "description": "",
        "operationId": "view",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "shipping_details_id",
            "in": "query",
            "description": "The shipping details ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/shipping-details/delete": {
      "delete": {
        "tags": [
          "shipping-details"
        ],
        "summary": "delete shippingdetails from the system",
        "description": "",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "shipping_details_id",
            "in": "formData",
            "description": "The shipping details ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },

    "/billing-details/add": {
      "post": {
        "tags": [
          "billing-details"
        ],
        "summary": "Add Billing Details",
        "description": "",
        "operationId": "add",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "formData",
            "description": "The order_id ",
            "required": true,
            "type": "integer"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "The name ",
            "required": true,
            "type": "string"
          },
          {
            "name": "contact_no",
            "in": "formData",
            "description": "The contact_no ",
            "required": false,
            "type": "number"
          },
          {
            "name": "address1",
            "in": "formData",
            "description": "The address1 ",
            "required": false,
            "type": "string"
          },
          {
            "name": "address2",
            "in": "formData",
            "description": "The address2.",
            "required": false,
            "type": "string"
          },
          {
            "name": "city",
            "in": "formData",
            "description": "The city.",
            "required": false,
            "type": "string"
          },
          {
            "name": "postal_code",
            "in": "formData",
            "description": "The postal_code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "contact_number",
            "in": "formData",
            "description": "The contact_number",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/billing-details/edit": {
      "patch": {
        "tags": [
          "billing-details"
        ],
        "summary": "Update billing details Record in the system",
        "description": "",
        "operationId": "edit",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "billing-details_id",
            "in": "query",
            "description": "The billing details ID ",
            "required": true,
            "type": "integer"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "The name ",
            "required": true,
            "type": "string"
          },
          {
            "name": "contact_no",
            "in": "formData",
            "description": "The contact_no ",
            "required": false,
            "type": "number"
          },
          {
            "name": "address1",
            "in": "formData",
            "description": "The address1 ",
            "required": false,
            "type": "string"
          },
          {
            "name": "address2",
            "in": "formData",
            "description": "The address2.",
            "required": false,
            "type": "string"
          },
          {
            "name": "city",
            "in": "formData",
            "description": "The city.",
            "required": false,
            "type": "string"
          },
          {
            "name": "postal_code",
            "in": "formData",
            "description": "The postal_code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "contact_number",
            "in": "formData",
            "description": "The contact_number",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/billing-details/list": {
      "get": {
        "tags": [
          "billing-details"
        ],
        "summary": "get All Billing Details",
        "description": "",
        "operationId": "list",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "description": "Get All billing details either by user_id, user_name, order_id, name, address",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_name",
            "in": "query",
            "description": "Get All billing details either by user_id, user_name, order_id, name, address",
            "required": false,
            "type": "string"
          },
          {
            "name": "order_id",
            "in": "query",
            "description": "Get All billing details either by user_id, user_name, order_id, name, address",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Get All billing details either by user_id, user_name, order_id, name, address",
            "required": false,
            "type": "string"
          },
          {
            "name": "address",
            "in": "query",
            "description": "Get All billing details either by user_id, user_name, order_id, name, address",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/billing-details/view": {
      "get": {
        "tags": [
          "billing-details"
        ],
        "summary": "Get billing details",
        "description": "",
        "operationId": "view",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "billing_details_id",
            "in": "query",
            "description": "The billing details ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/billing-details/delete": {
      "delete": {
        "tags": [
          "billing-details"
        ],
        "summary": "delete billing details from the system",
        "description": "",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "billing-details_id",
            "in": "formData",
            "description": "The billing details ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },

    "/user/admin/create": {
      "post": {
        "tags": [
          "STORE-User"
        ],
        "summary": "Create New User",
        "description": "",
        "operationId": "add",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "The name ",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "The email ",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "The password ",
            "required": true,
            "type": "string"
          },
          {
            "name": "role_id",
            "in": "formData",
            "description": "The role_id.",
            "required": true,
            "type": "interger"
          }

        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/user/admin/list": {
      "get": {
        "tags": [
          "STORE-User"
        ],
        "summary": "Get List of User",
        "description": "",
        "operationId": "list",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/admin/delete": {
      "delete": {
        "tags": [
          "STORE-User"
        ],
        "summary": "delete user admin the system",
        "description": "",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "description": "The User ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/admin/export": {
      "post": {
        "tags": [
          "STORE-User"
        ],
        "summary": "Export User",
        "description": "",
        "operationId": "exportUser",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "start",
            "in": "formData",
            "description": "The start date ",
            "required": true,
            "type": "string"
          },
          {
            "name": "end",
            "in": "formData",
            "description": "The end date ",
            "required": true,
            "type": "string"
          }

        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/user/login/invest-token": {
      "post": {
        "tags": [
          "STORE-User"
        ],
        "summary": "Login With Invest Token",
        "description": "",
        "operationId": "investToken",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "token",
            "in": "formData",
            "description": "The User store token ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    }
  },
  "definitions": {

  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}
