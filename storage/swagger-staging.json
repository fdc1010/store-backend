{
  "swagger": "2.0",
  "info": {
    "description": "This is swagger documentation for store store",
    "version": "0.0.1",
    "title": "Store Backend",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "miqdad.farcha@store.backend.fdc"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "host": "store.backend.fdc",
  "basePath": "/v1",
  "tags": [
    {
      "name": "store",
      "description": "Access to Store Backend"
    },
    {
      "name": "user",
      "description": "Operations about user",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/user/register": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Register user to system",
        "description": "",
        "operationId": "registerUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "The user name for register to system",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "The email for register to system",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "The password for register to system",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "The user email for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/user/profile": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Function to get user profile",
        "description": "",
        "operationId": "getUserProfile",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/profile/name": {
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Function to update user name",
        "description": "",
        "operationId": "updateUserName",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "New name of user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/profile/gender": {
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Function to update user gender",
        "description": "",
        "operationId": "updateUserGender",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "gender",
            "in": "formData",
            "description": "New gender of user",
            "required": true,
            "type": "string",
            "enum": ["male", "female"]
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/profile/phone": {
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Function to update user phone number",
        "description": "",
        "operationId": "updateUserPhone",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "formData",
            "description": "New phone of user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/profile/password": {
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Function to update user phone number",
        "description": "",
        "operationId": "updateUserPhone",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "old_password",
            "in": "formData",
            "description": "User old password",
            "required": true,
            "type": "string"
          },
          {
            "name": "new_password",
            "in": "formData",
            "description": "User new password",
            "required": true,
            "type": "string"
          },
          {
            "name": "new_password_confirmation",
            "in": "formData",
            "description": "User new password confirmation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "definitions": {

  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}